/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VersionChooserDialog.java
 *
 * Created on Mar 14, 2011, 10:37:46 PM
 */
package edu.uwm.cs.molhado.version;

import edu.cmu.cs.fluid.version.Version;
import java.awt.Frame;
import java.util.Collection;
import javax.swing.JComponent;
import javax.swing.JFrame;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;

/**
 *
 * @author chengt
 */
public class VersionChooserDialog extends javax.swing.JDialog implements LookupListener {

	private Lookup.Result<Version> result;
	private VersionGraphScene scene;
	private Version selectedVersion;

	private int returnStatus = RET_CANCEL;

	/** A return status code - returned if Cancel button has been pressed */
	public static final int RET_CANCEL = 0;
	/** A return status code - returned if OK button has been pressed */
	public static final int RET_OK = 1;

	/** Creates new form VersionChooserDialog */
	public VersionChooserDialog(Version root, Frame parent) {
		super(parent, true);
		setTitle("Please choose a version");
		initComponents();
		this.setLocationRelativeTo(parent);
		scene = new VersionGraphScene(root);
		JComponent component = scene.createView(); //must be called before build graph
		jScrollPane1.setViewportView(component); //must be called before build graph
		scene.buildGraph();  //must to be called last..
		result = scene.getLookup().lookupResult(Version.class);
		result.addLookupListener(this);
		resultChanged(null);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    jLabel1 = new javax.swing.JLabel();
    cancelButton = new javax.swing.JButton();
    okButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    jLabel1.setText(org.openide.util.NbBundle.getMessage(VersionChooserDialog.class, "VersionChooserDialog.jLabel1.text")); // NOI18N

    cancelButton.setText(org.openide.util.NbBundle.getMessage(VersionChooserDialog.class, "VersionChooserDialog.cancelButton.text")); // NOI18N
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelButtonActionPerformed(evt);
      }
    });

    okButton.setText(org.openide.util.NbBundle.getMessage(VersionChooserDialog.class, "VersionChooserDialog.okButton.text")); // NOI18N
    okButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        okButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addContainerGap(120, Short.MAX_VALUE))
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap(99, Short.MAX_VALUE)
        .addComponent(okButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(cancelButton)
        .addContainerGap())
      .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
    );

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(cancelButton)
          .addComponent(okButton))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

	/** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
	public int getReturnStatus() {
		return returnStatus;
	}

	public Version getSelectedVersion(){
		return selectedVersion;
	}

	//public Lookup getLookup() {
	//	return scene.getLookup();
	//}

	private void doClose(int retStatus) {
		returnStatus = retStatus;
		setVisible(false);
		dispose();
	}

		private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
			if (selectedVersion != null){
				doClose(RET_OK);
			}
		}//GEN-LAST:event_okButtonActionPerformed

		private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
			doClose(RET_CANCEL);
			selectedVersion = null;
		}//GEN-LAST:event_cancelButtonActionPerformed


		private static Version createVersionTree() {
		Version.setVersion(Version.getInitialVersion());
		Version.bumpVersion();
		Version v10 = VersionSupport.commit("1.0", "1.0");
		Version.bumpVersion();
		Version v20 = VersionSupport.commit("2.0", "2.0");
		Version.bumpVersion();
		Version v30 = VersionSupport.commit("3.0", "3.0");
		Version.setVersion(v20);
		Version.bumpVersion();
		Version v31 = VersionSupport.commitAsBranch("3.1", "3.1");
		return v10;
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				VersionChooserDialog chooser= new VersionChooserDialog(createVersionTree(), new JFrame());
				chooser.addWindowListener(new java.awt.event.WindowAdapter() {

					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				chooser.setVisible(true);

				if (chooser.RET_OK == chooser.getReturnStatus()) {
					System.out.println("You have chosen version: " + chooser.getSelectedVersion());
				} else {
					System.out.println("You have canceled version selection");
				}
			}
		});
	}

	public void resultChanged(LookupEvent le) {
		Collection<? extends Version> versions = result.allInstances();
		if (!versions.isEmpty()) {
			Version v = versions.iterator().next();
			selectedVersion = v;
	//		System.out.println("gv: " + VersionSupport.getVersionNumber(v));
		}

	}
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton cancelButton;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JButton okButton;
  // End of variables declaration//GEN-END:variables
}
